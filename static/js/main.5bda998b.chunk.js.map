{"version":3,"sources":["components/Content/NewBookModal/NewBookModal.module.css","components/Content/Books/Book/Book.module.css","components/Content/Books/Book/UtilityButton/UtilityButton.module.css","components/Header/Header.module.css","components/UI/Button/Button.module.css","components/Content/Books/Books.module.css","assets/images/kangaroo.png","components/Header/Header.js","components/UI/Button/Button.js","components/Content/NewBook/NewBook.js","store/actions/newBook.js","store/actions/actionTypes.js","components/Content/NewBookModal/NewBookModal.js","components/Content/Books/Book/UtilityButton/UtilityButton.js","components/Content/Books/Book/Book.js","components/Content/Books/Books.js","store/actions/books.js","components/Content/Content.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["module","exports","Header","props","className","classes","headerSection","Button","onClick","clicked","children","connect","state","dispatch","showModal","type","modal","newBook","closeModal","inputChangeHandler","input","bookType","actions","checkboxChangeHandler","addBookHandler","showModalState","NewBookSection","Show","join","NewBookFormContainer","onSubmit","event","preventDefault","_onSubmit","TextField","placeholder","value","title","onChange","target","required","author","pages","CheckboxField","checked","read","CheckboxLabel","CloseModal","UtilityButton","readBookState","ReadButton","Not","Book","BookGradient","RemoveBook","delete","BookClassics","src","kangaroo","width","alt","BookInfo","BookTitle","BookAuthor","PagesBlock","toggle","books","index","map","book","key","BookGrid","Content","Fragment","App","this","getLocalBooks","Component","Boolean","window","location","hostname","match","initialState","openModal","inputChangedHandler","action","checkboxChangedHandler","updatedBook","storeLocalBooks","updatedBooks","JSONbooks","JSON","stringify","localStorage","setItem","addBook","concat","updatedState","deleteBook","filter","toggleBook","getBooks","getItem","parse","reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5bda998b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewBookSection\":\"NewBookModal_NewBookSection__2n-h7\",\"Show\":\"NewBookModal_Show__2ioBX\",\"NewBookFormContainer\":\"NewBookModal_NewBookFormContainer__1OVSZ\",\"TextField\":\"NewBookModal_TextField__2RhRW\",\"CheckboxField\":\"NewBookModal_CheckboxField__16yDm\",\"CheckboxLabel\":\"NewBookModal_CheckboxLabel__2qmwJ\",\"CloseModal\":\"NewBookModal_CloseModal__1yniD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Book\":\"Book_Book__2Z9qP\",\"BookGradient\":\"Book_BookGradient__3Rpa5\",\"RemoveBook\":\"Book_RemoveBook__36460\",\"BookClassics\":\"Book_BookClassics__3aMmx\",\"BookInfo\":\"Book_BookInfo__OA16O\",\"BookAuthor\":\"Book_BookAuthor__1kPC4\",\"BookTitle\":\"Book_BookTitle__6RfFm\",\"PagesBlock\":\"Book_PagesBlock__c2AHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReadButton\":\"UtilityButton_ReadButton__1Rbbe\",\"Not\":\"UtilityButton_Not__joup1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"Header_headerSection__2Xk_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookGrid\":\"Books_BookGrid__ATdYW\"};","module.exports = __webpack_public_path__ + \"static/media/kangaroo.d03651bc.png\";","import React from 'react';\nimport classes from './Header.module.css';\n\nconst Header = (props) => (\n  <div className={classes.headerSection}>\n    <div className=\"container\">\n      <h1>My Library</h1>\n      <h4>The Odin Project</h4>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => (\n  <button className={classes.Button} onClick={props.clicked}>\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport Button from '../../UI/Button/Button';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nconst NewBook = (props) => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <div>\n        <h1>Books</h1>\n        <Button clicked={props.showModal}>Add New Book</Button>\n      </div>\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showModal: () => dispatch(actions.openModal()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBook);\n","import * as actionTypes from './actionTypes';\n\nexport const openModal = () => {\n  return {\n    type: actionTypes.OPEN_MODAL,\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: actionTypes.CLOSE_MODAL,\n  };\n};\n\nexport const inputChangedHandler = (input, type) => {\n  return {\n    type: actionTypes.INPUT_CHANGED_HANDLER,\n    input: input,\n    bookType: type,\n  };\n};\n\nexport const checkboxChangedHandler = () => {\n  return {\n    type: actionTypes.CHECKBOX_CHANGED_HANDLER,\n  };\n};\n\nexport const addBook = () => {\n  return {\n    type: actionTypes.ADD_BOOK,\n  };\n};\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const INPUT_CHANGED_HANDLER = 'INPUT_CHANGED_HANDLER';\nexport const CHECKBOX_CHANGED_HANDLER = 'CHECKBOX_CHANGED_HANDLER';\nexport const ADD_BOOK = 'ADD_BOOK';\nexport const DELETE_BOOK = 'DELETE_BOOK';\nexport const TOGGLE_BOOK = 'TOGGLE_BOOK';\nexport const GET_BOOKS = 'GET_BOOKS';\n","import React from 'react';\nimport classes from './NewBookModal.module.css';\nimport Button from '../../UI/Button/Button';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nconst NewBookModal = (props) => {\n  let showModalState = classes.NewBookSection;\n  if (props.modal) {\n    showModalState = [classes.NewBookSection, classes.Show].join(' ');\n  }\n\n  const _onSubmit = (event) => {\n    event.preventDefault();\n    props.addBookHandler();\n  };\n\n  return (\n    <div className={showModalState}>\n      <div className={classes.NewBookFormContainer}>\n        <h1>New Book</h1>\n        <div>\n          <form onSubmit={(event) => _onSubmit(event)}>\n            <label>Title</label>\n            <input\n              type=\"text\"\n              className={classes.TextField}\n              placeholder=\"Book Title\"\n              value={props.newBook.title}\n              onChange={(event) =>\n                props.inputChangeHandler(event.target.value, 'title')\n              }\n              required\n            />\n            <label>Author</label>\n            <input\n              type=\"text\"\n              className={classes.TextField}\n              placeholder=\"Author\"\n              value={props.newBook.author}\n              onChange={(event) =>\n                props.inputChangeHandler(event.target.value, 'author')\n              }\n              required\n            />\n            <label>Pages</label>\n            <input\n              type=\"number\"\n              className={classes.TextField}\n              placeholder=\"0\"\n              value={props.newBook.pages}\n              onChange={(event) =>\n                props.inputChangeHandler(event.target.value, 'pages')\n              }\n              required\n            />\n            <div className={classes.CheckboxField}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={props.newBook.read}\n                  onChange={props.checkboxChangeHandler}\n                />\n                <span className={classes.CheckboxLabel}>Finished Reading</span>\n              </label>\n            </div>\n            <div>\n              <Button>Submit</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className={classes.CloseModal} onClick={props.closeModal}>\n        <div>X</div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    modal: state.showModal,\n    newBook: state.newBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeModal: () => dispatch(actions.closeModal()),\n    inputChangeHandler: (input, type) =>\n      dispatch(actions.inputChangedHandler(input, type)),\n    checkboxChangeHandler: () => dispatch(actions.checkboxChangedHandler()),\n    addBookHandler: () => dispatch(actions.addBook()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBookModal);\n","import React from 'react';\nimport classes from './UtilityButton.module.css';\n\nconst UtilityButton = (props) => {\n  const readBookState = props.read\n    ? classes.ReadButton\n    : [classes.ReadButton, classes.Not].join(' ');\n  return (\n    <button className={readBookState} onClick={props.clicked}>\n      {props.read ? 'Finished' : 'Reading'}\n    </button>\n  );\n};\n\nexport default UtilityButton;\n","import React from 'react';\nimport classes from './Book.module.css';\nimport kangaroo from '../../../../assets/images/kangaroo.png';\nimport UtilityButton from './UtilityButton/UtilityButton';\n\nconst Book = (props) => {\n  return (\n    <div className={classes.Book}>\n      <div className={classes.BookGradient}>\n        <div className={classes.RemoveBook} onClick={props.delete}>\n          x\n        </div>\n      </div>\n      <div className={classes.BookClassics}>\n        <span>Kelly</span>\n        <img src={kangaroo} width=\"40\" alt=\"Kangaroo Icon\"></img>\n        <span>Classics</span>\n      </div>\n      <div className={classes.BookInfo}>\n        <div className={classes.BookTitle}>{props.title}</div>\n        <div className={classes.BookAuthor}>{props.author}</div>\n      </div>\n      <div className={classes.PagesBlock}>\n        <div>{props.pages} pages</div>\n        <UtilityButton read={props.read} clicked={props.toggle} />\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport classes from './Books.module.css';\nimport Book from './Book/Book';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\n\nconst Books = (props) => {\n  const books = props.books.map((book, index) => {\n    return (\n      <Book\n        title={book.title}\n        author={book.author}\n        pages={book.pages}\n        read={book.read}\n        delete={() => props.delete(index)}\n        toggle={() => props.toggle(index)}\n        key={book.title + index}\n      />\n    );\n  });\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className={classes.BookGrid}>{books}</div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    delete: (index) => dispatch(actions.deleteBook(index)),\n    toggle: (index) => dispatch(actions.toggleBook(index)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\n","import * as actionTypes from './actionTypes';\n\nexport const deleteBook = (index) => {\n  return {\n    type: actionTypes.DELETE_BOOK,\n    index: index,\n  };\n};\n\nexport const toggleBook = (index) => {\n  return {\n    type: actionTypes.TOGGLE_BOOK,\n    index: index,\n  };\n};\n\nexport const getBooks = () => {\n  return {\n    type: actionTypes.GET_BOOKS,\n  };\n};\n","import React from 'react';\nimport NewBook from './NewBook/NewBook';\nimport NewBookModal from './NewBookModal/NewBookModal';\nimport Books from './Books/Books';\n\nconst Content = (props) => (\n  <React.Fragment>\n    <NewBook />\n    <NewBookModal />\n    <Books />\n  </React.Fragment>\n);\n\nexport default Content;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getLocalBooks();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Content />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLocalBooks: () => dispatch(actions.getBooks()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  books: [\n    {\n      title: \"The Innovator's Dilemna\",\n      author: 'Clayton M. Christensen',\n      pages: 286,\n      read: true,\n    },\n    {\n      title: 'Sapiens',\n      author: 'Yuval Noah Harari',\n      pages: 442,\n      read: true,\n    },\n    {\n      title: 'Thinking, Fast and Slow',\n      author: 'Daniel Kahneman',\n      pages: 467,\n      read: false,\n    },\n  ],\n  newBook: { title: '', author: '', pages: '', read: true },\n  showModal: false,\n};\n\nconst openModal = (state) => {\n  const updatedState = { ...state, showModal: true };\n  return updatedState;\n};\n\nconst closeModal = (state) => {\n  const updatedState = {\n    ...state,\n    showModal: false,\n    newBook: { title: '', author: '', pages: '', read: true },\n  };\n  return updatedState;\n};\n\nconst inputChangedHandler = (state, action) => {\n  const newBook = {\n    ...state.newBook,\n    [action.bookType]: action.input,\n  };\n  const updatedState = { ...state, newBook: newBook };\n  return updatedState;\n};\n\nconst checkboxChangedHandler = (state) => {\n  const updatedBook = {\n    ...state.newBook,\n    read: !state.newBook.read,\n  };\n  const updatedState = { ...state, newBook: updatedBook };\n  return updatedState;\n};\n\nconst storeLocalBooks = (updatedBooks) => {\n  const JSONbooks = JSON.stringify(updatedBooks);\n  localStorage.setItem('books', JSONbooks);\n};\n\nconst addBook = (state) => {\n  const updatedBooks = state.books.concat(state.newBook);\n  const updatedState = {\n    ...state,\n    books: updatedBooks,\n    showModal: false,\n    newBook: { title: '', author: '', pages: '', read: true },\n  };\n  storeLocalBooks(updatedBooks);\n  return updatedState;\n};\n\nconst deleteBook = (state, action) => {\n  const updatedBooks = state.books.filter(\n    (book, index) => index !== action.index\n  );\n  const updatedState = { ...state, books: updatedBooks };\n  storeLocalBooks(updatedBooks);\n  return updatedState;\n};\n\nconst toggleBook = (state, action) => {\n  const updatedBook = { ...state.books[action.index] };\n  updatedBook.read = !updatedBook.read;\n\n  const updatedBooks = [...state.books];\n  updatedBooks[action.index] = updatedBook;\n\n  const updatedState = { ...state, books: updatedBooks };\n  storeLocalBooks(updatedBooks);\n  return updatedState;\n};\n\nconst getBooks = (state) => {\n  const JSONbooks = localStorage.getItem('books');\n  const books = JSON.parse(JSONbooks);\n\n  if (JSONbooks && state.books !== books) {\n    const updatedState = { ...state, books: books };\n    return updatedState;\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return openModal(state);\n    case actionTypes.CLOSE_MODAL:\n      return closeModal(state);\n    case actionTypes.INPUT_CHANGED_HANDLER:\n      return inputChangedHandler(state, action);\n    case actionTypes.CHECKBOX_CHANGED_HANDLER:\n      return checkboxChangedHandler(state);\n    case actionTypes.ADD_BOOK:\n      return addBook(state);\n    case actionTypes.DELETE_BOOK:\n      return deleteBook(state, action);\n    case actionTypes.TOGGLE_BOOK:\n      return toggleBook(state, action);\n    case actionTypes.GET_BOOKS:\n      return getBooks(state);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer/reducer';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}