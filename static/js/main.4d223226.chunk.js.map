{"version":3,"sources":["components/Content/NewBookModal/NewBookModal.module.css","components/Content/Books/Book/Book.module.css","components/Content/Books/Book/UtilityButton/UtilityButton.module.css","components/Header/Header.module.css","components/UI/Button/Button.module.css","components/Content/Books/Books.module.css","assets/images/kangaroo.png","components/Header/Header.js","components/UI/Button/Button.js","components/Content/NewBook/NewBook.js","components/Content/NewBookModal/NewBookModal.js","components/Content/Books/Book/UtilityButton/UtilityButton.js","components/Content/Books/Book/Book.js","components/Content/Books/Books.js","components/Content/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","classes","headerSection","Button","onClick","clicked","children","NewBook","showModalHandler","NewBookModal","showModalState","NewBookSection","modal","Show","join","NewBookFormContainer","onSubmit","event","add","newBook","type","TextField","placeholder","value","title","onChange","inputChangeHandler","required","author","pages","CheckboxField","checked","read","checkboxChangeHandler","CheckboxLabel","CloseModal","close","UtilityButton","readBookState","ReadButton","Not","Book","BookGradient","RemoveBook","delete","id","BookClassics","src","kangaroo","width","alt","BookInfo","BookAuthor","BookTitle","PagesBlock","toggle","Books","books","map","book","index","key","BookGrid","Content","Fragment","showModal","addBook","modalStatus","closeModal","deleteBook","toggleBook","App","state","updateStateBooks","updatedBooks","setState","JSONbooks","JSON","stringify","localStorage","setItem","inputChangeNewBookHandler","property","updatedBook","target","checkboxChangeNewBookHandler","closeModalHandler","addBookHandler","preventDefault","concat","toggleBookHandler","deleteBookHandler","filter","getItem","parse","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4d223226.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewBookSection\":\"NewBookModal_NewBookSection__2n-h7\",\"Show\":\"NewBookModal_Show__2ioBX\",\"NewBookFormContainer\":\"NewBookModal_NewBookFormContainer__1OVSZ\",\"TextField\":\"NewBookModal_TextField__2RhRW\",\"CheckboxField\":\"NewBookModal_CheckboxField__16yDm\",\"CheckboxLabel\":\"NewBookModal_CheckboxLabel__2qmwJ\",\"CloseModal\":\"NewBookModal_CloseModal__1yniD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Book\":\"Book_Book__2Z9qP\",\"BookGradient\":\"Book_BookGradient__3Rpa5\",\"RemoveBook\":\"Book_RemoveBook__36460\",\"BookClassics\":\"Book_BookClassics__3aMmx\",\"BookInfo\":\"Book_BookInfo__OA16O\",\"BookAuthor\":\"Book_BookAuthor__1kPC4\",\"BookTitle\":\"Book_BookTitle__6RfFm\",\"PagesBlock\":\"Book_PagesBlock__c2AHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReadButton\":\"UtilityButton_ReadButton__1Rbbe\",\"Not\":\"UtilityButton_Not__joup1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"Header_headerSection__2Xk_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookGrid\":\"Books_BookGrid__ATdYW\"};","module.exports = __webpack_public_path__ + \"static/media/kangaroo.d03651bc.png\";","import React from 'react';\nimport classes from './Header.module.css';\n\nconst Header = (props) => (\n  <div className={classes.headerSection}>\n    <div className=\"container\">\n      <h1>My Library</h1>\n      <h4>The Odin Project</h4>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = (props) => (\n  <button className={classes.Button} onClick={props.clicked}>\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport Button from '../../UI/Button/Button';\n\nconst NewBook = (props) => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <div>\n        <h1>Books</h1>\n        <Button clicked={props.showModalHandler}>Add New Book</Button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default NewBook;\n","import React from 'react';\nimport classes from './NewBookModal.module.css';\nimport Button from '../../UI/Button/Button';\n\nconst NewBookModal = (props) => {\n  let showModalState = classes.NewBookSection;\n  if (props.modal) {\n    showModalState = [classes.NewBookSection, classes.Show].join(' ');\n  }\n\n  return (\n    <div className={showModalState}>\n      <div className={classes.NewBookFormContainer}>\n        <h1>New Book</h1>\n        <div>\n          <form onSubmit={(event) => props.add(event, props.newBook)}>\n            <label>Title</label>\n            <input\n              type=\"text\"\n              className={classes.TextField}\n              placeholder=\"Book Title\"\n              value={props.newBook.title}\n              onChange={(event) => props.inputChangeHandler(event, 'title')}\n              required\n            />\n            <label>Author</label>\n            <input\n              type=\"text\"\n              className={classes.TextField}\n              placeholder=\"Author\"\n              value={props.newBook.author}\n              onChange={(event) => props.inputChangeHandler(event, 'author')}\n              required\n            />\n            <label>Pages</label>\n            <input\n              type=\"number\"\n              className={classes.TextField}\n              placeholder=\"0\"\n              value={props.newBook.pages}\n              onChange={(event) => props.inputChangeHandler(event, 'pages')}\n              required\n            />\n            <div className={classes.CheckboxField}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={props.newBook.read}\n                  onChange={props.checkboxChangeHandler}\n                />\n                <span className={classes.CheckboxLabel}>Finished Reading</span>\n              </label>\n            </div>\n            <div>\n              <Button>Submit</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className={classes.CloseModal} onClick={props.close}>\n        <div>X</div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewBookModal;\n","import React from 'react';\nimport classes from './UtilityButton.module.css';\n\nconst UtilityButton = (props) => {\n  const readBookState = props.read\n    ? classes.ReadButton\n    : [classes.ReadButton, classes.Not].join(' ');\n  return (\n    <button className={readBookState} onClick={props.clicked}>\n      {props.read ? 'Finished' : 'Reading'}\n    </button>\n  );\n};\n\nexport default UtilityButton;\n","import React from 'react';\nimport classes from './Book.module.css';\nimport kangaroo from '../../../../assets/images/kangaroo.png';\nimport UtilityButton from './UtilityButton/UtilityButton';\n\nconst Book = (props) => {\n  return (\n    <div className={classes.Book}>\n      <div className={classes.BookGradient}>\n        <div\n          className={classes.RemoveBook}\n          onClick={() => props.delete(props.id)}\n        >\n          x\n        </div>\n      </div>\n      <div className={classes.BookClassics}>\n        <span>Kelly</span>\n        <img src={kangaroo} width=\"40\" alt=\"Kangaroo Icon\"></img>\n        <span>Classics</span>\n      </div>\n      <div className={classes.BookInfo}>\n        <div className={classes.BookAuthor}>{props.author}</div>\n        <div className={classes.BookTitle}>{props.title}</div>\n      </div>\n      <div className={classes.PagesBlock}>\n        <div>{props.pages} pages</div>\n        <UtilityButton read={props.read} clicked={props.toggle} />\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport classes from './Books.module.css';\nimport Book from './Book/Book';\n\nconst Books = (props) => {\n  const books = props.books.map((book, index) => {\n    return (\n      <Book\n        id={book.title + index}\n        title={book.title}\n        author={book.author}\n        pages={book.pages}\n        read={book.read}\n        delete={props.delete}\n        toggle={() => props.toggle(index)}\n        key={book.title + index}\n      />\n    );\n  });\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <div className={classes.BookGrid}>{books}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n","import React from 'react';\nimport NewBook from './NewBook/NewBook';\nimport NewBookModal from './NewBookModal/NewBookModal';\nimport Books from './Books/Books';\n\nconst Content = (props) => (\n  <React.Fragment>\n    <NewBook showModalHandler={props.showModal} />\n    <NewBookModal\n      newBook={props.newBook}\n      add={props.addBook}\n      modal={props.modalStatus}\n      inputChangeHandler={props.inputChangeHandler}\n      checkboxChangeHandler={props.checkboxChangeHandler}\n      close={props.closeModal}\n    />\n    <Books\n      books={props.books}\n      delete={props.deleteBook}\n      toggle={props.toggleBook}\n    />\n  </React.Fragment>\n);\n\nexport default Content;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    books: [\n      {\n        title: 'This book is full of yarns of Ballarat',\n        author: 'Big Kev',\n        pages: 123,\n        read: true,\n      },\n      {\n        title: 'Byron bay, where it all started with emma',\n        author: 'Harry Mcallister',\n        pages: 234,\n        read: false,\n      },\n      {\n        title: \"Why I won't drive to Newport\",\n        author: 'Jack Penny',\n        pages: 523,\n        read: false,\n      },\n    ],\n    newBook: { title: '', author: '', pages: '', read: true },\n    showModal: false,\n  };\n\n  componentDidMount() {\n    const JSONbooks = localStorage.getItem('books');\n    const books = JSON.parse(JSONbooks);\n\n    if (JSONbooks && this.state.books !== books) {\n      this.updateStateBooks(books);\n    }\n  }\n\n  updateStateBooks = (updatedBooks) => {\n    this.setState({ books: updatedBooks });\n    const JSONbooks = JSON.stringify(updatedBooks);\n    localStorage.setItem('books', JSONbooks);\n  };\n\n  inputChangeNewBookHandler = (event, property) => {\n    const updatedBook = { ...this.state.newBook };\n    updatedBook[property] = event.target.value;\n    this.setState({ newBook: updatedBook });\n  };\n\n  checkboxChangeNewBookHandler = (event) => {\n    const updatedBook = { ...this.state.newBook };\n    updatedBook.read = event.target.checked;\n    this.setState({ newBook: updatedBook });\n  };\n\n  showModalHandler = () => {\n    this.setState({ showModal: true });\n  };\n\n  closeModalHandler = () => {\n    this.setState({\n      showModal: false,\n      newBook: { title: '', author: '', pages: '', read: true },\n    });\n  };\n\n  addBookHandler = (event, book) => {\n    event.preventDefault();\n    const updatedBooks = this.state.books.concat(book);\n    this.updateStateBooks(updatedBooks);\n    this.closeModalHandler();\n  };\n\n  toggleBookHandler = (index) => {\n    const updatedBooks = [...this.state.books];\n    const updatedBook = updatedBooks[index];\n\n    updatedBook.read = !this.state.books[index].read;\n    this.updateStateBooks(updatedBooks);\n  };\n\n  deleteBookHandler = (id) => {\n    const updatedBooks = this.state.books.filter((book, index) => {\n      return book.title + index !== id;\n    });\n    this.updateStateBooks(updatedBooks);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Content\n          showModal={this.showModalHandler}\n          closeModal={this.closeModalHandler}\n          modalStatus={this.state.showModal}\n          books={this.state.books}\n          newBook={this.state.newBook}\n          inputChangeHandler={this.inputChangeNewBookHandler}\n          checkboxChangeHandler={this.checkboxChangeNewBookHandler}\n          addBook={this.addBookHandler}\n          deleteBook={this.deleteBookHandler}\n          toggleBook={this.toggleBookHandler}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}